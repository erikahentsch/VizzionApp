{"version":3,"sources":["logo.svg","components/Menu.js","components/RegionSelect.js","components/Toolbar.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","formControl","minWidth","regionButton","styles","display","drawer","flexShrink","flexDirection","position","drawerPaper","drawerTitle","fontSize","fontWeight","padding","drawerBody","buttonGroup","alignContent","flexGrow","drawerToggle","alignItems","right","top","radius","zIndex","boxShadow","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","contentShift","easeOut","enteringScreen","tooltip","height","Toolbar","props","classes","Drawer","className","variant","anchor","open","FormControl","margin","FormLabel","FormControlLabel","label","control","Switch","checked","editSwitch","onChange","handleSwitch","name","inputProps","FormHelperText","FormGroup","row","Button","onClick","handleUpdate","color","handleClear","downloadContent","useStyles","cameraIcon","L","icon","iconUrl","iconAnchor","popupAnchor","hotSpotIcon","MapDiv","circle","fillColor","opacity","useState","lat","long","zoom","newRectangle","setNewRectangle","toggleEditSwitch","toggleOpen","rectangleClicked","toggleRectangleClicked","toggleDrawer","length","handleNewRectangle","handleImageLoad","console","log","document","getElementById","style","loading","error","errorMessage","clsx","IconButton","Map","e","newPt","latlng","toFixed","lng","initPt","center","TileLayer","cursor","attribution","url","searchArea","Rectangle","bounds","CircleMarker","Popup","cameras","map","camera","Marker","key","id","hotspot","onError","target","src","onLoad","handleReset","atag","createElement","cameraList","file","Blob","type","href","URL","createObjectURL","download","click","regionData","App","data","setData","toggleLoading","setSearchArea","toggleError","setErrorMessage","setRegionData","useEffect","getData","getRegions","fetch","then","res","ok","json","pt1","pt2","Error","statusText","cameraData","catch","message","rect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46630005.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedList(props) {\r\n  const classes = useStyles();\r\n  const [open, toggleOpen] = useState(false); \r\n  const [countryOpen, setCountryOpen] = useState(null)\r\n\r\n\r\n  const handleClick = () => {\r\n    toggleOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Select Cameras By Region\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemText primary=\"Select Country\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        {props.regionData ?\r\n        <List component=\"div\" dissablePadding>\r\n            {props.regionData.countries.map(country=>{\r\n                return ( \r\n                    <>\r\n                    <ListItem>\r\n                        <ListItemText primary={country.name} />\r\n                    </ListItem>\r\n                    <Collapse in={countryOpen === country.CountryId}>\r\n                        <List>\r\n                            \r\n                        </List>\r\n                    </Collapse>\r\n                </>\r\n                );\r\n            })}\r\n        </List>\r\n        :\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem  className={classes.nested}>\r\n            <ListItemText primary=\"Loading Regions...\" />\r\n          </ListItem>\r\n        </List>\r\n        }\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  regionButton: {\r\n      paddingLeft: 20\r\n  }\r\n}));\r\n\r\nexport default function RegionSelect(props) {\r\n  const [open, toggleOpen] = React.useState(false)\r\n  \r\n    const classes = useStyles();\r\n  const wrapper = React.createRef;\r\n\r\n  const handleClickRegion = (e) => {\r\n    console.log(e)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"grouped-select\">Select Region</InputLabel>\r\n        <Select defaultValue=\"\" id=\"grouped-select\">\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <div>\r\n          {props.regionData && \r\n          \r\n          props.regionData.countries.map((country,i)=> {\r\n              return( \r\n              <div key={`countryList-${i}`}>\r\n              <ListSubheader style={{backgroundColor: 'white'}}>{country.name}</ListSubheader>\r\n                {country.states.map((state,i)=>{\r\n                    return (\r\n                    <div key={`stateList-${i}`} style={{paddingLeft: '5px'}}>\r\n                        <ListSubheader style={{backgroundColor: 'white', fontWeight: 'bold'}}>{state.name}</ListSubheader>\r\n                        {state.regions.map((region,i)=>\r\n                            <MenuItem key={i} ref={wrapper} value={'here'} className={classes.regionButton} key={region.RegionId} onClick={handleClickRegion}>{region.name}</MenuItem>\r\n                        )}\r\n                    </div>\r\n                    );\r\n                })\r\n\r\n                }\r\n                \r\n                {/* <MenuItem value={2}>Option 2</MenuItem> */}\r\n                </div>\r\n            )}\r\n          )\r\n\r\n          }\r\n          </div>\r\n\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    Drawer,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    Button,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Menu from './Menu'\r\nimport RegionSelect from './RegionSelect'\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst styles = makeStyles((theme)=>({\r\n    root: {\r\n        display: 'flex',\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'relative'\r\n      },\r\n      drawerPaper: {\r\n          width: drawerWidth,\r\n      },\r\n      drawerTitle: {\r\n          fontSize: '24px',\r\n          fontWeight: 'bold',\r\n          padding: '10px'\r\n      },\r\n      drawerBody: {\r\n          padding: '0px 10px'\r\n      },\r\n      buttonGroup: {\r\n          padding: '20px 0px', \r\n          display: 'flex', \r\n          alignContent: 'space-between',\r\n          '& button' :{\r\n              flexGrow: 1\r\n          }\r\n      },\r\n      drawerToggle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 5,\r\n        radius: '5px',\r\n        backgroundColor: 'white',\r\n        zIndex: 10,\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2)'\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: -drawerWidth,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n      },\r\n      tooltip: {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          width: '300px',\r\n          '& img': {\r\n              height: 'auto',\r\n              maxWidth: '300px'\r\n          }\r\n      }\r\n}));\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    const classes = styles();\r\n    return (             \r\n    <Drawer\r\n    className={classes.drawer}\r\n    variant=\"persistent\"\r\n    anchor=\"right\"\r\n    open={props.open}\r\n    classes={{\r\n        paper: classes.drawerPaper,\r\n    }}\r\n   >\r\n        <div className={classes.drawerTitle}>Toolbar</div>\r\n        <div className={classes.drawerBody}>\r\n            <FormControl margin={\"normal\"}>\r\n                <FormLabel>Change Search Area</FormLabel>\r\n                <FormControlLabel\r\n                    label=\"Toggle Area Edit\"\r\n                    control={\r\n                        <Switch\r\n                        checked={props.editSwitch}\r\n                        onChange={props.handleSwitch}\r\n                        name=\"checkedA\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                    }\r\n                />\r\n                <FormHelperText>Select two points to create new search rectangle</FormHelperText>    \r\n                {/* <FormGroup >\r\n                    <RegionSelect regionData={props.regionData} />\r\n                </FormGroup> */}\r\n                <FormGroup className={classes.buttonGroup} row>\r\n                    <Button onClick={props.handleUpdate} variant=\"contained\" color=\"primary\">Update</Button>\r\n                    <Button onClick={props.handleClear} variant=\"contained\">Clear</Button>\r\n\r\n                </FormGroup>                \r\n                <FormGroup>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.downloadContent}>Export</Button>\r\n\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div>\r\n    </Drawer>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import React, {useState} from 'react';\r\nimport Toolbar from './Toolbar'\r\n\r\nimport { \r\n    Rectangle,\r\n    Map, \r\n    Marker, \r\n    TileLayer, \r\n    Popup, \r\n    CircleMarker,\r\n} from 'react-leaflet';\r\nimport clsx from 'clsx';\r\nimport L from 'leaflet'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport {\r\n    Drawer,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    Button,\r\n} from '@material-ui/core'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerTitle: {\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n        padding: '10px'\r\n    },\r\n    drawerBody: {\r\n        padding: '0px 10px'\r\n    },\r\n    buttonGroup: {\r\n        padding: '20px 0px', \r\n        display: 'flex', \r\n        alignContent: 'space-between',\r\n        '& button' :{\r\n            flexGrow: 1\r\n        }\r\n    },\r\n    drawerToggle: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: 5,\r\n      radius: '5px',\r\n      backgroundColor: 'white',\r\n      zIndex: 10,\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2)'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      position: 'relative',\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: 0,\r\n    },\r\n    tooltip: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '300px',\r\n        '& img': {\r\n            height: 'auto',\r\n            maxWidth: '300px'\r\n        }\r\n    }\r\n  }));\r\n  \r\nconst polygon = [\r\n    [43.6465, -79.389],\r\n    [43.655, -79.377]\r\n  ]\r\n\r\n\r\nconst prefix = process.env.NODE_ENV === 'development' ? '../': \"./\";\r\n\r\n\r\nvar cameraIcon = L.icon({\r\n    iconUrl: `camera.png`,\r\n    // iconSize: [, 32],\r\n    iconAnchor: [16, 16],\r\n    popupAnchor: [-3, -16],\r\n})\r\n\r\nvar hotSpotIcon = L.icon({\r\n    iconUrl: `hotspot_camera.png`,\r\n    // iconSize: [50, 50],\r\n    iconAnchor: [16, 16],\r\n    popupAnchor: [-3, -16],\r\n})\r\n\r\nvar circle = L.circle({\r\n    color: \"red\",\r\n    fillColor: 'red',\r\n    opacity: 0.75,\r\n    radius: 5000\r\n})\r\n\r\n\r\nconst MapDiv = (props) => {\r\n    const [position, setPosition] = useState({lat: 43.6475, long: -79.3811, zoom: 13})\r\n    const [newRectangle, setNewRectangle] = useState([])\r\n    const [editSwitch, toggleEditSwitch] = useState(true)\r\n    const [open, toggleOpen] = useState(false)\r\n    const [rectangleClicked, toggleRectangleClicked] = useState(false)\r\n    const [popupShow, togglePopupShow] = useState(false)\r\n    const [showImage, toggleShowImage] = useState(false)\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSwitch = (e) => {\r\n        toggleEditSwitch(!editSwitch)\r\n    }\r\n\r\n    const handleMapClick = (e) => {\r\n        console.log(e)\r\n        if(editSwitch) {\r\n            let newPt = [e.latlng.lat.toFixed(3), e.latlng.lng.toFixed(3)]\r\n            \r\n            console.log(newPt)\r\n\r\n            if (newRectangle.length === 0) {\r\n                setNewRectangle([newPt])\r\n            } else if (newRectangle.length === 1) {\r\n                let initPt = newRectangle[0];\r\n                console.log(initPt, newPt)\r\n                setNewRectangle([initPt, newPt])\r\n            } else if ((newRectangle.length === 2 && !rectangleClicked)) {\r\n                setNewRectangle([newPt])\r\n            } else if (rectangleClicked) {\r\n                toggleRectangleClicked(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        toggleOpen(!open)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setNewRectangle([])\r\n        props.handleReset()\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (newRectangle.length === 2) {\r\n            props.handleNewRectangle(newRectangle);\r\n            setNewRectangle([])\r\n        }\r\n\r\n    }\r\n\r\n    const handleRectangleClick = (e) => {\r\n        toggleRectangleClicked(true)\r\n        console.log(\"click rectangle\", e)\r\n        \r\n    }\r\n\r\n    function downloadContent() {\r\n        try {\r\n            var atag = document.createElement(\"a\");\r\n            var cameraList = ''\r\n            props.cameras.map(camera =>cameraList+=(camera.id + '\\n'))\r\n            var file = new Blob([cameraList], {type: 'text/plain'});\r\n            atag.href = URL.createObjectURL(file);\r\n            atag.download = 'cameraList';\r\n            atag.click();\r\n        } catch (e) {\r\n            console.log(\"Error Exporting Data\")\r\n        }\r\n      }\r\n\r\n    const getImage = (id) => {\r\n        console.log('getImage')\r\n        fetch(`image/${id}`)\r\n            .then(res=>{\r\n                console.log(\"res\", res)\r\n                if (res.ok) {\r\n                    document.getElementById(`cameraImage`+id).src = `image/592`\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleImageLoad = () => {\r\n        console.log(\"load\")\r\n        document.getElementById('imageDiv').style.display = ('inherit')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.loading && \r\n                <div className=\"spinnerDiv\">\r\n                    <div className=\"spinnerText\">Loading Cameras</div>\r\n                    <div className=\"spinner\">\r\n                        <div className=\"double-bounce1\"></div>\r\n                        <div className=\"double-bounce2\"></div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {props.error && \r\n                <div className=\"spinnerDiv\">\r\n                    <div className=\"spinnerText\">{props.errorMessage}</div>\r\n                </div>\r\n            }\r\n        <div\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div onClick={toggleDrawer} className={classes.drawerToggle}>\r\n              <IconButton onClick={toggleDrawer}>\r\n                  {!open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n            <Map  onClick={handleMapClick} height={100}  center={[position.lat, position.long]} zoom={position.zoom}>\r\n                <TileLayer\r\n                style={{cursor: editSwitch && \"pointer !important\" }}\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {props.searchArea.length ===2 && <Rectangle color=\"purple\" bounds={props.searchArea} />}\r\n                {newRectangle.length === 1 && <CircleMarker color=\"red\" opacity={1} radius={2} center={newRectangle[0]}></CircleMarker>}\r\n                {newRectangle.length === 2 && \r\n                <Rectangle onClick={handleRectangleClick} color=\"red\" bounds={newRectangle}>\r\n                    <Popup>\r\n                        <Button onClick={handleUpdate} >Update Search</Button>\r\n                    </Popup>\r\n                </Rectangle>\r\n                }\r\n\r\n                {props.cameras && \r\n                props.cameras.map(camera=>{\r\n                    return (\r\n                        <Marker key={camera.id} position={[camera.lat, camera.long]} icon={camera.hotspot ? hotSpotIcon: cameraIcon}>\r\n                            <Popup >\r\n                                <div className={classes.tooltip}>\r\n                                    <div id=\"imageDiv\" style={{display: 'none'}}>\r\n                                        <img onError={e=>{\r\n                                            e.target.onError = null;\r\n                                            e.target.src = '/NoImage'\r\n                                        }} onLoad={handleImageLoad} src={`/image/${camera.id}`}/>\r\n                                    </div>\r\n                                    <div><strong>ID: </strong>{camera.id}</div>\r\n                                    <div><strong>Name: </strong>{camera.name}</div>\r\n                                </div>\r\n                            </Popup>\r\n                        </Marker>\r\n                    )\r\n                })\r\n                } \r\n            </Map>\r\n            </div>\r\n            <Toolbar \r\n                open={open}\r\n                editSwitch={editSwitch}\r\n                handleSwitch={handleSwitch}\r\n                handleUpdate={handleUpdate}\r\n                handleClear={handleClear}\r\n                downloadContent={downloadContent}\r\n                regionData={props.regionData}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapDiv;","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Map from './components/Map.js'\nimport Menu from './components/Menu.js'\n\nfunction App() {\n\n  const [data, setData] = useState(null)\n  const [loading, toggleLoading] = useState(true)\n  const [searchArea, setSearchArea] = useState([])\n  const [error, toggleError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [regionData, setRegionData] = useState(null)\n  \n  useEffect(()=> {\n    console.log('useEffect');\n    getData();\n    getRegions();\n    // fetch('/api')\n    //   .then(res=>{  \n    //     console.log(res)\n    //     if (res.ok){\n    //       return res.json()\n    //     }\n    //   })\n    //   .then(json=>{\n    //     console.log(json)\n    //     setData(json.cameraData);\n    //     setSearchArea(json.searchArea);\n    //     toggleLoading(false);\n    //   })\n    //   .catch(e=>{\n    //     console.log\n    //     toggleError(true)\n    //     toggleLoading(false)\n    //     setErrorMessage(\"Error fetching data\")\n    //   })\n  },[])\n\n  const getRegions = () => {\n    console.log(\"get regions\")\n    fetch('/regions')\n      .then(res=>{\n        if (res.ok) {\n          return res.json()\n        }\n      })\n      .then(json=>{\n        setRegionData(json)\n      })\n  }\n\n  const getData = (pt1='', pt2='') => {\n    console.log(\"get Data\", pt1)\n    setData(null)\n    setErrorMessage(null)\n\n    var url = '/api'\n    if (pt1 != '') {\n      url = `/api/${pt1},${pt2}`\n    }\n    console.log(`/api/${pt1},${pt2}`)\n\n    fetch(url)\n      .then(res=>{  \n        console.log(res)\n        if (res.ok){\n          return res.json()\n        } else \n        throw Error(`${res.statusText}`)\n      })\n      .then(json=>{\n        console.log(json)\n        setData(json.cameraData);\n        setSearchArea(json.searchArea);\n        toggleLoading(false);\n      })\n      .catch(e=>{\n        console.log(e.message)\n        toggleError(true)\n        toggleLoading(false)\n        if (e.message === \"Not Found\") {\n          console.log(\"this error\")\n          setErrorMessage(\"No Cameras Available\")\n        } else { \n          setErrorMessage(\"Error fetching data\")\n        }\n      })\n  }\n  \n  const updateRectangle = (rect) => {\n    console.log(\"App\", rect)\n    toggleLoading(true)\n    toggleError(null)\n    setSearchArea(rect)\n    setData(null)\n    getData(rect[0], rect[1])\n  }\n\n\n  const handleReset = () => {\n    toggleError(null)\n  }\n\n  return (\n    <div className=\"App\">\n        <Map \n          handleReset={handleReset}\n          handleNewRectangle={updateRectangle}\n          cameras={data}\n          searchArea={searchArea}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          regionData={regionData}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}