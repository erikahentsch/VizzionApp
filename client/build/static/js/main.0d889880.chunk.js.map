{"version":3,"sources":["logo.svg","components/NavItem.js","components/Toolbar.js","components/Map.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavItem","props","useState","open","setOpen","wrapperRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","className","onClick","e","console","log","children","DropdownMenu","activeMenu","setActiveMenu","undefined","stateMenu","setStateMenu","regionMenu","setRegionMenu","menuHeight","setMenuHeight","direction","setDirection","countryLabel","setCountryLabel","stateLabel","setStateLabel","calcHeight","el","height","offsetHeight","handleRegionData","region","handleRegionSelect","DropdownItem","sticky","goToMenu","stateList","regionList","handleCountryClick","regionData","style","CSSTransition","in","unmountOnExit","timeout","classNames","onEnter","regions","countries","map","country","i","name","states","enter","enterActive","exit","exitActive","state","SelectRegion","styles","makeStyles","theme","root","display","fontFamily","drawer","width","flexShrink","flexDirection","position","drawerPaper","drawerTitle","fontSize","fontWeight","padding","drawerBody","buttonGroup","alignContent","flexGrow","drawerToggle","alignItems","right","top","radius","backgroundColor","zIndex","boxShadow","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","contentShift","easeOut","enteringScreen","tooltip","maxWidth","Toolbar","classes","Drawer","variant","anchor","paper","FormControl","margin","FormLabel","FormControlLabel","label","control","Switch","checked","editSwitch","onChange","handleSwitch","inputProps","FormHelperText","FormGroup","row","Button","handleUpdate","color","handleClear","downloadContent","paddingTop","useStyles","cameraIcon","L","icon","iconUrl","iconAnchor","popupAnchor","hotSpotIcon","MapDiv","circle","fillColor","opacity","lat","long","zoom","setPosition","newRectangle","setNewRectangle","toggleEditSwitch","toggleOpen","rectangleClicked","toggleRectangleClicked","toggleDrawer","length","handleNewRectangle","handleImageLoad","getElementById","loading","error","errorMessage","clsx","IconButton","Map","cursor","newPt","latlng","toFixed","lng","initPt","center","TileLayer","attribution","url","searchArea","Rectangle","bounds","CircleMarker","Popup","cameras","camera","Marker","key","id","hotspot","onError","src","onLoad","handleReset","atag","createElement","cameraList","file","Blob","type","href","URL","createObjectURL","download","click","pt1","pt2","palette","background","nested","paddingLeft","spacing","App","data","setData","toggleLoading","setSearchArea","toggleError","setErrorMessage","setRegionData","getData","getRegions","fetch","then","res","ok","json","Error","statusText","cameraData","catch","message","rect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,kC,kPCqBrCC,EAAU,SAACC,GAAW,IAAD,EACCC,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KAEjBC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACC,GACpBH,EAAWI,UAAYJ,EAAWI,QAAQC,SAASF,EAAMG,SACzDP,GAAQ,IAWhB,OAPAQ,qBAAU,WAEN,OADAC,SAASC,iBAAiB,QAASP,GAAoB,GAChD,WACHM,SAASE,oBAAoB,QAASR,GAAoB,OAK9D,yBAAKS,IAAKX,EAAYY,UAAU,YAC5B,0BAAOA,UAAU,YAAYC,QAAS,SAACC,GAAKC,QAAQC,IAAIF,GAAIf,GAASD,KAArE,iBACCA,GAAQF,EAAMqB,WAM3B,SAASC,EAAatB,GAAQ,IAAD,EAEWC,mBAAS,QAFpB,mBAElBsB,EAFkB,KAENC,EAFM,OAGQvB,wBAASwB,GAHjB,mBAGlBC,EAHkB,KAGPC,EAHO,OAIW1B,wBAASwB,GAJpB,mBAIlBG,EAJkB,KAINC,EAJM,OAKW5B,mBAAS,MALpB,mBAKlB6B,EALkB,KAKNC,EALM,OAMS9B,mBAAS,UANlB,mBAMlB+B,EANkB,KAMPC,EANO,OAOehC,mBAAS,IAPxB,mBAOlBiC,EAPkB,KAOJC,EAPI,OAQWlC,mBAAS,IARpB,mBAQlBmC,EARkB,KAQNC,EARM,KAWnBC,EAAa,SAACC,GAChB,IAAMC,EAASD,EAAGE,aAClBV,EAAcS,IAqCZE,EAAkB,SAACC,GACrBxB,QAAQC,IAAI,WACZpB,EAAM4C,mBAAmBD,IAG7B,SAASE,EAAa7C,GACpB,OACE,yBACIgB,UAAS,oBAAehB,EAAM8C,QAAU,cAExC7B,QAAS,WACLjB,EAAM+C,SA5CS,SAAC/C,GACxBmB,QAAQC,IAAI,SAAWpB,GAEJ,SAAfuB,EACAU,EAAa,UAEO,WAAfV,GAA8C,SAAnBvB,EAAM+C,SACtCd,EAAa,WACS,WAAfV,GAA8C,YAAnBvB,EAAM+C,SACxCd,EAAa,UAEbA,EAAa,WAGbjC,EAAMgD,WACNrB,EAAa3B,EAAMgD,WAGnBhD,EAAMiD,YACNpB,EAAc7B,EAAMiD,YAGpBjD,EAAMkC,cACNC,EAAgBnC,EAAMkC,cAEtBlC,EAAMoC,YACNC,EAAcrC,EAAMoC,YAGxBZ,EAAcxB,EAAM+C,UAgBZG,CAAmBlD,GACZA,EAAMmD,YACbT,EAAiB1C,EAAMmD,cAI5BnD,EAAMqB,UAKb,OACE,yBAAKL,UAAU,WAAWoC,MAAO,CAACZ,OAAQV,IACtC,kBAACuB,EAAA,EAAD,CACEC,GAAmB,SAAf/B,EACJgC,eAAa,EAACC,QAAS,IACvBC,WAAW,eACXC,QAASpB,GAET,yBAAKtB,UAAU,QACVhB,EAAM2D,QAAU3D,EAAM2D,QAAQC,UAAUC,KAAI,SAACC,EAASC,GACnD,OAAO,kBAAClB,EAAD,CAAcE,SAAU,SAAUb,aAAc4B,EAAQE,KAAMhB,UAAWc,EAAQG,QAASH,EAAQE,SAExG,kBAACnB,EAAD,6BAIX,kBAACQ,EAAA,EAAD,CACEC,GAAmB,WAAf/B,EACJgC,eAAa,EAACC,QAAS,IACvBC,WAAY,CACRS,MAAqB,WAAdlC,EAAyB,uBAAyB,qBACzDmC,YAA2B,WAAdnC,EAAyB,8BAAgC,4BACtEoC,KAAoB,WAAdpC,EAAyB,oBAAqB,sBACpDqC,WAA0B,WAAdrC,EAAyB,2BAA4B,8BAGrE0B,QAASpB,GAGT,yBAAKtB,UAAU,QACXU,EACA,oCACI,kBAACmB,EAAD,CAAcC,QAAM,EAACC,SAAS,QAAO,kBAAC,IAAD,MAAoBb,GACxDR,EAAUmC,KAAI,SAAAS,GAAK,OAAE,kBAACzB,EAAD,CAAcE,SAAS,UAAUX,WAAYkC,EAAMN,KAAMf,WAAYqB,EAAMX,SAAUW,EAAMN,UAIrH,oCACI,kBAACnB,EAAD,CAAcE,SAAS,QAAO,kBAAC,IAAD,MAAoBb,GAClD,kBAACW,EAAD,CAAcE,SAAS,WAAvB,qBAKV,kBAACM,EAAA,EAAD,CACEC,GAAmB,YAAf/B,EACJgC,eAAa,EAACC,QAAS,IACvBC,WAAY,gBACZC,QAASpB,GAGT,yBAAKtB,UAAU,QACXY,EACA,oCACI,kBAACiB,EAAD,CAAcC,QAAM,EAACC,SAAS,UAAS,kBAAC,IAAD,MAAoBX,GAC1DR,EAAWiC,KAAI,SAAAlB,GAAM,OAAE,kBAACE,EAAD,CAAcM,WAAYR,GAASA,EAAOqB,UAItE,oCACI,kBAACnB,EAAD,CAAcC,QAAM,EAACC,SAAS,UAAS,kBAAC,IAAD,MAAoBX,GAC3D,kBAACS,EAAD,4BASL0B,MAzLK,SAACvE,GAMjB,OACI,kBAAC,EAAD,KACI,kBAACsB,EAAD,CAAcsB,mBANK,SAACD,GACxB3C,EAAM4C,mBAAmBD,IAKiCgB,QAAS3D,EAAM2D,YCO3Ea,EAASC,aAAW,SAACC,GAAD,MAAU,CAChCC,KAAM,CACFC,QAAS,OACPC,WAAY,8CAEhBC,OAAQ,CACNC,MATY,IAUZC,WAAY,EACZJ,QAAS,OACTK,cAAe,SACfC,SAAU,YAEZC,YAAa,CACTJ,MAhBU,KAkBdK,YAAa,CACTC,SAAU,OACVC,WAAY,OACZC,QAAS,OACTV,WAAY,8CAEhBW,WAAY,CACRD,QAAS,YAEbE,YAAa,CACTF,QAAS,WACTX,QAAS,OACTc,aAAc,gBACd,WAAY,CACRC,SAAU,IAGlBC,aAAc,CACZhB,QAAS,OACTiB,WAAY,SACZX,SAAU,WACVY,MAAO,EACPC,IAAK,EACLC,OAAQ,MACRC,gBAAiB,QACjBC,OAAQ,GACRC,UAAW,oCAEbC,QAAS,CACPT,SAAU,EACVT,SAAU,WACVmB,WAAY3B,EAAM4B,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9B,EAAM4B,YAAYE,OAAOC,MACjCC,SAAUhC,EAAM4B,YAAYI,SAASC,gBAEvCC,aArDY,KAuDdC,aAAc,CACZR,WAAY3B,EAAM4B,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9B,EAAM4B,YAAYE,OAAOM,QACjCJ,SAAUhC,EAAM4B,YAAYI,SAASK,iBAEvCH,YAAa,GAEfI,QAAS,CACLpC,QAAS,OACTK,cAAe,SACfF,MAAO,QACP,QAAS,CACLvC,OAAQ,OACRyE,SAAU,cAsDTC,EAjDC,SAAClH,GAEb,IAAMmH,EAAU3C,IAEhB,OACA,kBAAC4C,EAAA,EAAD,CACApG,UAAWmG,EAAQrC,OACnBuC,QAAQ,aACRC,OAAO,QACPpH,KAAMF,EAAME,KACZiH,QAAS,CACLI,MAAOJ,EAAQhC,cAGf,yBAAKnE,UAAWmG,EAAQ/B,aAAxB,WACA,yBAAKpE,UAAWmG,EAAQ3B,YACpB,kBAACgC,EAAA,EAAD,CAAaC,OAAQ,UACjB,kBAACC,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,CACIC,MAAM,mBACNC,QACI,kBAACC,EAAA,EAAD,CACAC,QAAS/H,EAAMgI,WACfC,SAAUjI,EAAMkI,aAChBlE,KAAK,WACLmE,WAAY,CAAE,aAAc,0BAIpC,kBAACC,EAAA,EAAD,yDAEA,kBAACC,EAAA,EAAD,CAAWrH,UAAWmG,EAAQ1B,YAAa6C,KAAG,GAC1C,kBAACC,EAAA,EAAD,CAAQtH,QAASjB,EAAMwI,aAAcnB,QAAQ,YAAYoB,MAAM,WAA/D,UACA,kBAACF,EAAA,EAAD,CAAQtH,QAASjB,EAAM0I,YAAarB,QAAQ,aAA5C,UAGJ,kBAACgB,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAQlB,QAAQ,YAAYoB,MAAM,YAAYxH,QAASjB,EAAM2I,iBAA7D,WAGJ,kBAACN,EAAA,EAAD,CAAWjF,MAAO,CAACwF,WAAY,KAC3B,kBAAC,EAAD,CAAchG,mBAAoB5C,EAAM4C,mBAAoBe,QAAS3D,EAAMmD,kB,wGCnGzF0F,EAAYpE,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,QAAS,OACTpC,OAAQ,QAEVsC,OAAQ,CACNC,MARc,IASdC,WAAY,EACZJ,QAAS,OACTK,cAAe,SACfC,SAAU,YAEZC,YAAa,CACTJ,MAfY,KAiBhBK,YAAa,CACTC,SAAU,OACVC,WAAY,OACZC,QAAS,QAEbC,WAAY,CACRD,QAAS,YAEbE,YAAa,CACTF,QAAS,WACTX,QAAS,OACTc,aAAc,gBACd,WAAY,CACRC,SAAU,IAGlBC,aAAc,CACZhB,QAAS,OACTiB,WAAY,SACZX,SAAU,WACVY,MAAO,EACPC,IAAK,EACLC,OAAQ,MACRC,gBAAiB,QACjBC,OAAQ,GACRC,UAAW,oCAEbC,QAAS,CACPT,SAAU,EACVT,SAAU,WACVmB,WAAY3B,EAAM4B,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9B,EAAM4B,YAAYE,OAAOC,MACjCC,SAAUhC,EAAM4B,YAAYI,SAASC,gBAEvCC,aAnDc,KAqDhBC,aAAc,CACZR,WAAY3B,EAAM4B,YAAYC,OAAO,SAAU,CAC7CC,OAAQ9B,EAAM4B,YAAYE,OAAOM,QACjCJ,SAAUhC,EAAM4B,YAAYI,SAASK,iBAEvCH,YAAa,GAEfI,QAAS,CACLpC,QAAS,OACTK,cAAe,SACfF,MAAO,QACP,QAAS,CACLvC,OAAQ,OACRyE,SAAU,cAclB6B,EAAaC,IAAEC,KAAK,CACpBC,QAAQ,aAERC,WAAY,CAAC,GAAI,IACjBC,YAAa,EAAE,GAAI,MAGnBC,EAAcL,IAAEC,KAAK,CACrBC,QAAQ,qBAERC,WAAY,CAAC,GAAI,IACjBC,YAAa,EAAE,GAAI,MAyLRE,GAtLFN,IAAEO,OAAO,CAClBb,MAAO,MACPc,UAAW,MACXC,QAAS,IACTxD,OAAQ,MAIG,SAAChG,GAAW,IAAD,EACUC,mBAAS,CAACwJ,IAAK,QAASC,MAAO,QAASC,KAAM,KADxD,mBACfzE,EADe,KACL0E,EADK,OAEkB3J,mBAAS,IAF3B,mBAEf4J,EAFe,KAEDC,EAFC,OAGiB7J,oBAAS,GAH1B,mBAGf+H,EAHe,KAGH+B,EAHG,OAIK9J,oBAAS,GAJd,mBAIfC,EAJe,KAIT8J,EAJS,OAK6B/J,oBAAS,GALtC,mBAKfgK,EALe,KAKGC,EALH,OAMejK,oBAAS,GANxB,gCAOeA,oBAAS,IAPxB,mBAShBkH,GATgB,UASN0B,KA2BVsB,EAAe,WACjBH,GAAY9J,IAQVsI,EAAe,WACW,IAAxBqB,EAAaO,SACbpK,EAAMqK,mBAAmBR,GACzBC,EAAgB,MAyBxB,IAWMQ,EAAkB,WACpBnJ,QAAQC,IAAI,QACZR,SAAS2J,eAAe,YAAYnH,MAAMwB,QAAW,WASzD,OACI,yBAAK5D,UAAWmG,EAAQxC,MACnB3E,EAAMwK,SACH,yBAAKxJ,UAAU,cACX,yBAAKA,UAAU,eAAf,mBACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBAI1BhB,EAAMyK,OACH,yBAAKzJ,UAAU,cACX,yBAAKA,UAAU,eAAehB,EAAM0K,eAGhD,yBACE1J,UAAW2J,YAAKxD,EAAQf,QAAT,eACZe,EAAQN,aAAe3G,KAG1B,yBAAKe,QAASkJ,EAAcnJ,UAAWmG,EAAQvB,cAC3C,kBAACgF,EAAA,EAAD,CAAY3J,QAASkJ,GACfjK,EAA6B,kBAAC,IAAD,MAAtB,kBAAC,IAAD,QAGf,kBAAC2K,EAAA,EAAD,CAAKzH,MAAO,CAAC0H,OAAQ9C,GAAc,WAAY/G,QA1GhC,SAACC,GAEpB,GADAC,QAAQC,IAAIF,GACT8G,EAAY,CACX,IAAI+C,EAAQ,CAAC7J,EAAE8J,OAAOvB,IAAIwB,QAAQ,GAAI/J,EAAE8J,OAAOE,IAAID,QAAQ,IAI3D,GAFA9J,QAAQC,IAAI2J,GAEgB,IAAxBlB,EAAaO,OACbN,EAAgB,CAACiB,SACd,GAA4B,IAAxBlB,EAAaO,OAAc,CAClC,IAAIe,EAAStB,EAAa,GAC1B1I,QAAQC,IAAI+J,EAAQJ,GACpBjB,EAAgB,CAACqB,EAAQJ,SACO,IAAxBlB,EAAaO,QAAiBH,EAE/BA,GACPC,GAAuB,GAFvBJ,EAAgB,CAACiB,MA4FmDK,OAAQ,CAAClG,EAASuE,IAAKvE,EAASwE,MAAOC,KAAMzE,EAASyE,MAC1H,kBAAC0B,EAAA,EAAD,CACAjI,MAAO,CAAC0H,OAAQ9C,GAAc,sBAC9BsD,YAAY,0EACZC,IAAI,uDAEwB,IAA3BvL,EAAMwL,WAAWpB,QAAe,kBAACqB,EAAA,EAAD,CAAWhD,MAAM,SAASiD,OAAQ1L,EAAMwL,aAChD,IAAxB3B,EAAaO,QAAgB,kBAACuB,EAAA,EAAD,CAAclD,MAAM,MAAMe,QAAS,EAAGxD,OAAQ,EAAGoF,OAAQvB,EAAa,KAC3E,IAAxBA,EAAaO,QACd,kBAACqB,EAAA,EAAD,CAAWxK,QA7EM,SAACC,GAC1BgJ,GAAuB,GACvB/I,QAAQC,IAAI,kBAAmBF,IA2EmBuH,MAAM,MAAMiD,OAAQ7B,GAC1D,kBAAC+B,EAAA,EAAD,KACI,kBAACrD,EAAA,EAAD,CAAQtH,QAASuH,GAAjB,mBAKPxI,EAAM6L,SACP7L,EAAM6L,QAAQhI,KAAI,SAAAiI,GACd,OACI,kBAACC,EAAA,EAAD,CAAQC,IAAKF,EAAOG,GAAI/G,SAAU,CAAC4G,EAAOrC,IAAKqC,EAAOpC,MAAOV,KAAM8C,EAAOI,QAAU9C,EAAaN,GAC7F,kBAAC8C,EAAA,EAAD,KACI,yBAAK5K,UAAWmG,EAAQH,SACpB,yBAAKiF,GAAG,WAAW7I,MAAO,CAACwB,QAAS,SAChC,yBAAKuH,QAAS,SAAAjL,GACVA,EAAER,OAAOyL,QAAU,KACnBjL,EAAER,OAAO0L,IAAM,YAChBC,OAAQ/B,EAAiB8B,IAAG,iBAAYN,EAAOG,OAEtD,6BAAK,wCAAsBH,EAAOG,IAClC,6BAAK,0CAAwBH,EAAO9H,cAS5D,kBAAC,EAAD,CACI9D,KAAMA,EACN8H,WAAYA,EACZE,aAvJS,SAAChH,GAClB6I,GAAkB/B,IAuJVQ,aAAcA,EACdE,YA5HQ,WAChBoB,EAAgB,IAChB9J,EAAMsM,eA2HE3D,gBA1GZ,WACI,IACI,IAAI4D,EAAO3L,SAAS4L,cAAc,KAC9BC,EAAa,GACjBzM,EAAM6L,QAAQhI,KAAI,SAAAiI,GAAM,OAAGW,GAAaX,EAAOG,GAAK,QACpD,IAAIS,EAAO,IAAIC,KAAK,CAACF,GAAa,CAACG,KAAM,eACzCL,EAAKM,KAAOC,IAAIC,gBAAgBL,GAChCH,EAAKS,SAAW,aAChBT,EAAKU,QACP,MAAO/L,GACLC,QAAQC,IAAI,0BAiGR+B,WAAYnD,EAAMmD,WAClBP,mBA/Ee,SAACD,GACxBxB,QAAQC,IAAI,0BAA2BuB,GACvCiH,EAAY,CAACH,IAAK9G,EAAOyI,OAAO,GAAI1B,KAAM/G,EAAOyI,OAAO,GAAIzB,KAAM,KAClEG,EAAgB,CAACnH,EAAOuK,IAAKvK,EAAOwK,MACpCnN,EAAMqK,mBAAmB,CAAC1H,EAAOuK,IAAKvK,EAAOwK,Y,+CCjNnC1I,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJI,MAAO,OACPkC,SAAU,IACVhB,gBAAiBvB,EAAM0I,QAAQC,WAAW9F,OAE5C+F,OAAQ,CACNC,YAAa7I,EAAM8I,QAAQ,QCoGhBC,MAnHf,WAAgB,IAAD,EAEWxN,mBAAS,MAFpB,mBAENyN,EAFM,KAEAC,EAFA,OAGoB1N,oBAAS,GAH7B,mBAGNuK,EAHM,KAGGoD,EAHH,OAIuB3N,mBAAS,IAJhC,mBAINuL,EAJM,KAIMqC,EAJN,OAKgB5N,oBAAS,GALzB,mBAKNwK,EALM,KAKCqD,EALD,OAM2B7N,mBAAS,MANpC,mBAMNyK,EANM,KAMQqD,EANR,OAOuB9N,mBAAS,MAPhC,mBAONkD,EAPM,KAOM6K,EAPN,KASbrN,qBAAU,WACRQ,QAAQC,IAAI,aACZ6M,IACAC,MAoBA,IAEF,IAAMA,EAAa,WACjB/M,QAAQC,IAAI,eACZ+M,MAAM,YACHC,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAGdH,MAAK,SAAAG,GACJP,EAAcO,OAIdN,EAAU,WAAqB,IAApBf,EAAmB,uDAAf,GAAIC,EAAW,uDAAP,GAC3BhM,QAAQC,IAAI,WAAY8L,GACxBS,EAAQ,MACRI,EAAgB,MAEhB,IAAIxC,EAAM,OACC,IAAP2B,IACF3B,EAAG,eAAW2B,EAAX,YAAkBC,IAEvBhM,QAAQC,IAAR,eAAoB8L,EAApB,YAA2BC,IAE3BgB,MAAM5C,GACH6C,MAAK,SAAAC,GAEJ,GADAlN,QAAQC,IAAIiN,GACRA,EAAIC,GACN,OAAOD,EAAIE,OAEb,MAAMC,MAAM,GAAD,OAAIH,EAAII,gBAEpBL,MAAK,SAAAG,GACJpN,QAAQC,IAAImN,GACZZ,EAAQY,EAAKG,YACbb,EAAcU,EAAK/C,YACnBoC,GAAc,MAEfe,OAAM,SAAAzN,GACLC,QAAQC,IAAIF,EAAE0N,SACdd,GAAY,GACZF,GAAc,GACI,cAAd1M,EAAE0N,SACJzN,QAAQC,IAAI,cACZ2M,EAAgB,yBAEhBA,EAAgB,2BAmBxB,OACE,yBAAK/M,UAAU,OACX,kBAAC,EAAD,CACEsL,YAPY,WAClBwB,EAAY,OAONzD,mBAlBgB,SAACwE,GACvB1N,QAAQC,IAAI,MAAOyN,GACnBjB,GAAc,GACdE,EAAY,MACZD,EAAcgB,GACdlB,EAAQ,MACRM,EAAQY,EAAK,GAAIA,EAAK,KAahBhD,QAAS6B,EACTlC,WAAYA,EACZhB,QAASA,EACTC,MAAOA,EACPC,aAAcA,EACdvH,WAAYA,MCxGF2L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzO,SAAS2J,eAAe,SDyHpB,kBAAmB+E,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdf,OAAM,SAAAlE,GACLtJ,QAAQsJ,MAAMA,EAAMmE,c","file":"static/js/main.0d889880.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useRef, useState, useEffect} from 'react'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\nconst SelectRegion =(props) => {\r\n\r\n    const handleRegionSelect = (region) => {\r\n        props.handleRegionSelect(region)\r\n    }\r\n\r\n    return (\r\n        <NavItem>\r\n            <DropdownMenu handleRegionSelect={handleRegionSelect} regions={props.regions} ></DropdownMenu>\r\n\r\n        </NavItem>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst NavItem = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const wrapperRef = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div ref={wrapperRef} className=\"nav-item\">\r\n            <span  className=\"nav-label\" onClick={(e)=>{console.log(e); setOpen(!open)}}>SELECT REGION</span>\r\n            {open && props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction DropdownMenu(props) {\r\n\r\n    const [activeMenu, setActiveMenu] = useState('main')\r\n    const [stateMenu, setStateMenu] =useState(undefined)\r\n    const [regionMenu, setRegionMenu] = useState(undefined)\r\n    const [menuHeight, setMenuHeight] = useState(null)\r\n    const [direction, setDirection] = useState('normal')\r\n    const [countryLabel, setCountryLabel] = useState('')\r\n    const [stateLabel, setStateLabel] = useState('')\r\n\r\n\r\n    const calcHeight = (el) => {\r\n        const height = el.offsetHeight;\r\n        setMenuHeight(height)\r\n    }\r\n\r\n\r\n    const handleCountryClick = (props) => {\r\n        console.log(\"click \",  props)\r\n\r\n        if (activeMenu === 'main') {\r\n            setDirection('normal')\r\n        }\r\n        else if (activeMenu === 'states' && props.goToMenu === 'main') {\r\n            setDirection('reverse')\r\n        } else if (activeMenu === 'states' && props.goToMenu === 'regions') {\r\n            setDirection('normal')\r\n        } else {\r\n            setDirection('reverse')\r\n        }\r\n        \r\n        if (props.stateList) {\r\n            setStateMenu(props.stateList)\r\n        }\r\n\r\n        if (props.regionList) {\r\n            setRegionMenu(props.regionList)\r\n        }\r\n\r\n        if (props.countryLabel) {\r\n            setCountryLabel(props.countryLabel)\r\n        }\r\n        if (props.stateLabel) {\r\n            setStateLabel(props.stateLabel)\r\n        }\r\n\r\n        setActiveMenu(props.goToMenu)\r\n\r\n    }\r\n\r\n    const handleRegionData =(region) => {\r\n        console.log(\"REGIONS\")\r\n        props.handleRegionSelect(region)\r\n    }\r\n\r\n    function DropdownItem(props) {\r\n      return (\r\n        <div \r\n            className={`menu-item ${props.sticky && 'menu-fixed'}`} \r\n            // style={{position: props.sticky && 'fixed'}}\r\n            onClick={()=>{\r\n            if (props.goToMenu) {\r\n                handleCountryClick(props)\r\n            } else if (props.regionData) {\r\n                handleRegionData(props.regionData)\r\n            }\r\n            }} \r\n        >\r\n          {props.children}\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className=\"dropdown\" style={{height: menuHeight}}>\r\n          <CSSTransition \r\n            in={activeMenu === 'main'} \r\n            unmountOnExit timeout={500} \r\n            classNames=\"menu-primary\"\r\n            onEnter={calcHeight}\r\n          >\r\n            <div className=\"menu\">\r\n                {props.regions ? props.regions.countries.map((country, i) => {\r\n                    return <DropdownItem goToMenu={'states'} countryLabel={country.name} stateList={country.states}>{country.name}</DropdownItem>\r\n                }) \r\n                    :<DropdownItem >LOADING REGIONS...</DropdownItem>\r\n                }\r\n            </div>\r\n          </CSSTransition>\r\n          <CSSTransition \r\n            in={activeMenu === 'states'} \r\n            unmountOnExit timeout={500} \r\n            classNames={{\r\n                enter: direction === 'normal' ? 'menu-secondary-enter' : 'menu-primary-enter',\r\n                enterActive: direction === 'normal' ? 'menu-secondary-enter-active' : 'menu-primary-enter-active',\r\n                exit: direction === 'normal' ? 'menu-primary-exit': 'menu-secondary-exit',\r\n                exitActive: direction === 'normal' ? 'menu-primary-exit-active': 'menu-secondary-exit-active'\r\n\r\n            }}\r\n            onEnter={calcHeight}\r\n\r\n          >\r\n            <div className=\"menu\">\r\n               {stateMenu ?\r\n                <>\r\n                    <DropdownItem sticky goToMenu=\"main\"><ChevronLeftIcon />{countryLabel}</DropdownItem>\r\n                    {stateMenu.map(state=><DropdownItem goToMenu=\"regions\" stateLabel={state.name} regionList={state.regions}>{state.name}</DropdownItem>)\r\n                    }\r\n                </>\r\n                :\r\n                <>\r\n                    <DropdownItem goToMenu=\"main\"><ChevronLeftIcon />{countryLabel}</DropdownItem>\r\n                    <DropdownItem goToMenu=\"regions\">Loading States</DropdownItem>\r\n                </>\r\n                }\r\n            </div>\r\n          </CSSTransition>\r\n          <CSSTransition \r\n            in={activeMenu === 'regions'} \r\n            unmountOnExit timeout={500} \r\n            classNames={\"menu-tertiary\"}\r\n            onEnter={calcHeight}\r\n\r\n          >\r\n            <div className=\"menu\">\r\n               {regionMenu ?\r\n                <>\r\n                    <DropdownItem sticky goToMenu=\"states\"><ChevronLeftIcon />{stateLabel}</DropdownItem>\r\n                    {regionMenu.map(region=><DropdownItem regionData={region}>{region.name}</DropdownItem>)\r\n                    }\r\n                </>\r\n                :\r\n                <>\r\n                    <DropdownItem sticky goToMenu=\"states\"><ChevronLeftIcon />{stateLabel}</DropdownItem>\r\n                    <DropdownItem>Loading Regions</DropdownItem>\r\n                </>\r\n                }\r\n            </div>\r\n          </CSSTransition>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default SelectRegion","import React from 'react';\r\n\r\nimport {\r\n    Drawer,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    Button,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SelectRegion from './NavItem'\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst styles = makeStyles((theme)=>({\r\n    root: {\r\n        display: 'flex',\r\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n      },\r\n      drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'relative'\r\n      },\r\n      drawerPaper: {\r\n          width: drawerWidth,\r\n      },\r\n      drawerTitle: {\r\n          fontSize: '24px',\r\n          fontWeight: 'bold',\r\n          padding: '10px',\r\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n      },\r\n      drawerBody: {\r\n          padding: '0px 10px'\r\n      },\r\n      buttonGroup: {\r\n          padding: '20px 0px', \r\n          display: 'flex', \r\n          alignContent: 'space-between',\r\n          '& button' :{\r\n              flexGrow: 1\r\n          }\r\n      },\r\n      drawerToggle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'absolute',\r\n        right: 0,\r\n        top: 5,\r\n        radius: '5px',\r\n        backgroundColor: 'white',\r\n        zIndex: 10,\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2)'\r\n      },\r\n      content: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: -drawerWidth,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n      },\r\n      tooltip: {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          width: '300px',\r\n          '& img': {\r\n              height: 'auto',\r\n              maxWidth: '300px'\r\n          }\r\n      }\r\n}));\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    const classes = styles();\r\n    \r\n    return (             \r\n    <Drawer\r\n    className={classes.drawer}\r\n    variant=\"persistent\"\r\n    anchor=\"right\"\r\n    open={props.open}\r\n    classes={{\r\n        paper: classes.drawerPaper,\r\n    }}\r\n   >\r\n        <div className={classes.drawerTitle}>Toolbar</div>\r\n        <div className={classes.drawerBody}>\r\n            <FormControl margin={\"normal\"}>\r\n                <FormLabel>Change Search Area</FormLabel>\r\n                <FormControlLabel\r\n                    label=\"Toggle Area Edit\"\r\n                    control={\r\n                        <Switch\r\n                        checked={props.editSwitch}\r\n                        onChange={props.handleSwitch}\r\n                        name=\"checkedA\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                    }\r\n                />\r\n                <FormHelperText>Select two points to create new search rectangle</FormHelperText>    \r\n                \r\n                <FormGroup className={classes.buttonGroup} row>\r\n                    <Button onClick={props.handleUpdate} variant=\"contained\" color=\"primary\">Update</Button>\r\n                    <Button onClick={props.handleClear} variant=\"contained\">Clear</Button>\r\n\r\n                </FormGroup>                \r\n                <FormGroup>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.downloadContent}>Export</Button>\r\n\r\n                </FormGroup>\r\n                <FormGroup style={{paddingTop: 20}}>\r\n                    <SelectRegion handleRegionSelect={props.handleRegionSelect} regions={props.regionData} />\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div>\r\n    </Drawer>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import React, {useState} from 'react';\r\nimport Toolbar from './Toolbar'\r\n\r\nimport { \r\n    Rectangle,\r\n    Map, \r\n    Marker, \r\n    TileLayer, \r\n    Popup, \r\n    CircleMarker,\r\n} from 'react-leaflet';\r\nimport clsx from 'clsx';\r\nimport L from 'leaflet'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport {\r\n    Drawer,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    Button,\r\n} from '@material-ui/core'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      height: '100%',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      position: 'relative'\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerTitle: {\r\n        fontSize: '24px',\r\n        fontWeight: 'bold',\r\n        padding: '10px'\r\n    },\r\n    drawerBody: {\r\n        padding: '0px 10px'\r\n    },\r\n    buttonGroup: {\r\n        padding: '20px 0px', \r\n        display: 'flex', \r\n        alignContent: 'space-between',\r\n        '& button' :{\r\n            flexGrow: 1\r\n        }\r\n    },\r\n    drawerToggle: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: 5,\r\n      radius: '5px',\r\n      backgroundColor: 'white',\r\n      zIndex: 10,\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2)'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      position: 'relative',\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginRight: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: 0,\r\n    },\r\n    tooltip: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '300px',\r\n        '& img': {\r\n            height: 'auto',\r\n            maxWidth: '300px'\r\n        }\r\n    }\r\n  }));\r\n  \r\nconst polygon = [\r\n    [43.6465, -79.389],\r\n    [43.655, -79.377]\r\n  ]\r\n\r\n\r\nconst prefix = process.env.NODE_ENV === 'development' ? '../': \"./\";\r\n\r\n\r\nvar cameraIcon = L.icon({\r\n    iconUrl: `camera.png`,\r\n    // iconSize: [, 32],\r\n    iconAnchor: [16, 16],\r\n    popupAnchor: [-3, -16],\r\n})\r\n\r\nvar hotSpotIcon = L.icon({\r\n    iconUrl: `hotspot_camera.png`,\r\n    // iconSize: [50, 50],\r\n    iconAnchor: [16, 16],\r\n    popupAnchor: [-3, -16],\r\n})\r\n\r\nvar circle = L.circle({\r\n    color: \"red\",\r\n    fillColor: 'red',\r\n    opacity: 0.75,\r\n    radius: 5000\r\n})\r\n\r\n\r\nconst MapDiv = (props) => {\r\n    const [position, setPosition] = useState({lat: 43.6475, long: -79.3811, zoom: 13})\r\n    const [newRectangle, setNewRectangle] = useState([])\r\n    const [editSwitch, toggleEditSwitch] = useState(true)\r\n    const [open, toggleOpen] = useState(false)\r\n    const [rectangleClicked, toggleRectangleClicked] = useState(false)\r\n    const [popupShow, togglePopupShow] = useState(false)\r\n    const [showImage, toggleShowImage] = useState(false)\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSwitch = (e) => {\r\n        toggleEditSwitch(!editSwitch)\r\n    }\r\n\r\n    const handleMapClick = (e) => {\r\n        console.log(e)\r\n        if(editSwitch) {\r\n            let newPt = [e.latlng.lat.toFixed(3), e.latlng.lng.toFixed(3)]\r\n            \r\n            console.log(newPt)\r\n\r\n            if (newRectangle.length === 0) {\r\n                setNewRectangle([newPt])\r\n            } else if (newRectangle.length === 1) {\r\n                let initPt = newRectangle[0];\r\n                console.log(initPt, newPt)\r\n                setNewRectangle([initPt, newPt])\r\n            } else if ((newRectangle.length === 2 && !rectangleClicked)) {\r\n                setNewRectangle([newPt])\r\n            } else if (rectangleClicked) {\r\n                toggleRectangleClicked(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        toggleOpen(!open)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setNewRectangle([])\r\n        props.handleReset()\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (newRectangle.length === 2) {\r\n            props.handleNewRectangle(newRectangle);\r\n            setNewRectangle([])\r\n        }\r\n\r\n    }\r\n\r\n    const handleRectangleClick = (e) => {\r\n        toggleRectangleClicked(true)\r\n        console.log(\"click rectangle\", e)\r\n        \r\n    }\r\n\r\n    function downloadContent() {\r\n        try {\r\n            var atag = document.createElement(\"a\");\r\n            var cameraList = ''\r\n            props.cameras.map(camera =>cameraList+=(camera.id + '\\n'))\r\n            var file = new Blob([cameraList], {type: 'text/plain'});\r\n            atag.href = URL.createObjectURL(file);\r\n            atag.download = 'cameraList';\r\n            atag.click();\r\n        } catch (e) {\r\n            console.log(\"Error Exporting Data\")\r\n        }\r\n      }\r\n\r\n    const getImage = (id) => {\r\n        console.log('getImage')\r\n        fetch(`image/${id}`)\r\n            .then(res=>{\r\n                console.log(\"res\", res)\r\n                if (res.ok) {\r\n                    document.getElementById(`cameraImage`+id).src = `image/592`\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleImageLoad = () => {\r\n        console.log(\"load\")\r\n        document.getElementById('imageDiv').style.display = ('inherit')\r\n    }\r\n    const handleRegionSelect = (region) => {\r\n        console.log(\"region selected in MAp!\", region)\r\n        setPosition({lat: region.center[0], long: region.center[1], zoom: 10})\r\n        setNewRectangle([region.pt1, region.pt2])\r\n        props.handleNewRectangle([region.pt1, region.pt2])\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {props.loading && \r\n                <div className=\"spinnerDiv\">\r\n                    <div className=\"spinnerText\">Loading Cameras</div>\r\n                    <div className=\"spinner\">\r\n                        <div className=\"double-bounce1\"></div>\r\n                        <div className=\"double-bounce2\"></div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {props.error && \r\n                <div className=\"spinnerDiv\">\r\n                    <div className=\"spinnerText\">{props.errorMessage}</div>\r\n                </div>\r\n            }\r\n        <div\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div onClick={toggleDrawer} className={classes.drawerToggle}>\r\n              <IconButton onClick={toggleDrawer}>\r\n                  {!open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n            <Map style={{cursor: editSwitch && 'pointer'}} onClick={handleMapClick} center={[position.lat, position.long]} zoom={position.zoom}>\r\n                <TileLayer\r\n                style={{cursor: editSwitch && \"pointer !important\" }}\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {props.searchArea.length ===2 && <Rectangle color=\"purple\" bounds={props.searchArea} />}\r\n                {newRectangle.length === 1 && <CircleMarker color=\"red\" opacity={1} radius={2} center={newRectangle[0]}></CircleMarker>}\r\n                {newRectangle.length === 2 && \r\n                <Rectangle onClick={handleRectangleClick} color=\"red\" bounds={newRectangle}>\r\n                    <Popup>\r\n                        <Button onClick={handleUpdate} >Update Search</Button>\r\n                    </Popup>\r\n                </Rectangle>\r\n                }\r\n\r\n                {props.cameras && \r\n                props.cameras.map(camera=>{\r\n                    return (\r\n                        <Marker key={camera.id} position={[camera.lat, camera.long]} icon={camera.hotspot ? hotSpotIcon: cameraIcon}>\r\n                            <Popup >\r\n                                <div className={classes.tooltip}>\r\n                                    <div id=\"imageDiv\" style={{display: 'none'}}>\r\n                                        <img onError={e=>{\r\n                                            e.target.onError = null;\r\n                                            e.target.src = '/NoImage'\r\n                                        }} onLoad={handleImageLoad} src={`/image/${camera.id}`}/>\r\n                                    </div>\r\n                                    <div><strong>ID: </strong>{camera.id}</div>\r\n                                    <div><strong>Name: </strong>{camera.name}</div>\r\n                                </div>\r\n                            </Popup>\r\n                        </Marker>\r\n                    )\r\n                })\r\n                } \r\n            </Map>\r\n            </div>\r\n            <Toolbar \r\n                open={open}\r\n                editSwitch={editSwitch}\r\n                handleSwitch={handleSwitch}\r\n                handleUpdate={handleUpdate}\r\n                handleClear={handleClear}\r\n                downloadContent={downloadContent}\r\n                regionData={props.regionData}\r\n                handleRegionSelect={handleRegionSelect}\r\n\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapDiv;","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function NestedList(props) {\r\n  const classes = useStyles();\r\n  const [open, toggleOpen] = useState(false); \r\n  const [countryOpen, setCountryOpen] = useState(null)\r\n\r\n\r\n  const handleClick = () => {\r\n    toggleOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          Select Cameras By Region\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemText primary=\"Select Country\" />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        {props.regionData ?\r\n        <List component=\"div\" dissablePadding>\r\n            {props.regionData.countries.map(country=>{\r\n                return ( \r\n                    <>\r\n                    <ListItem>\r\n                        <ListItemText primary={country.name} />\r\n                    </ListItem>\r\n                    <Collapse in={countryOpen === country.CountryId}>\r\n                        <List>\r\n                            \r\n                        </List>\r\n                    </Collapse>\r\n                </>\r\n                );\r\n            })}\r\n        </List>\r\n        :\r\n        <List component=\"div\" disablePadding>\r\n          <ListItem  className={classes.nested}>\r\n            <ListItemText primary=\"Loading Regions...\" />\r\n          </ListItem>\r\n        </List>\r\n        }\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Map from './components/Map.js'\nimport Menu from './components/Menu.js'\n\nfunction App() {\n\n  const [data, setData] = useState(null)\n  const [loading, toggleLoading] = useState(true)\n  const [searchArea, setSearchArea] = useState([])\n  const [error, toggleError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [regionData, setRegionData] = useState(null)\n  \n  useEffect(()=> {\n    console.log('useEffect');\n    getData();\n    getRegions();\n    // fetch('/api')\n    //   .then(res=>{  \n    //     console.log(res)\n    //     if (res.ok){\n    //       return res.json()\n    //     }\n    //   })\n    //   .then(json=>{\n    //     console.log(json)\n    //     setData(json.cameraData);\n    //     setSearchArea(json.searchArea);\n    //     toggleLoading(false);\n    //   })\n    //   .catch(e=>{\n    //     console.log\n    //     toggleError(true)\n    //     toggleLoading(false)\n    //     setErrorMessage(\"Error fetching data\")\n    //   })\n  },[])\n\n  const getRegions = () => {\n    console.log(\"get regions\")\n    fetch('/regions')\n      .then(res=>{\n        if (res.ok) {\n          return res.json()\n        }\n      })\n      .then(json=>{\n        setRegionData(json)\n      })\n  }\n\n  const getData = (pt1='', pt2='') => {\n    console.log(\"get Data\", pt1)\n    setData(null)\n    setErrorMessage(null)\n\n    var url = '/api'\n    if (pt1 != '') {\n      url = `/api/${pt1},${pt2}`\n    }\n    console.log(`/api/${pt1},${pt2}`)\n\n    fetch(url)\n      .then(res=>{  \n        console.log(res)\n        if (res.ok){\n          return res.json()\n        } else \n        throw Error(`${res.statusText}`)\n      })\n      .then(json=>{\n        console.log(json)\n        setData(json.cameraData);\n        setSearchArea(json.searchArea);\n        toggleLoading(false);\n      })\n      .catch(e=>{\n        console.log(e.message)\n        toggleError(true)\n        toggleLoading(false)\n        if (e.message === \"Not Found\") {\n          console.log(\"this error\")\n          setErrorMessage(\"No Cameras Available\")\n        } else { \n          setErrorMessage(\"Error fetching data\")\n        }\n      })\n  }\n  \n  const updateRectangle = (rect) => {\n    console.log(\"App\", rect)\n    toggleLoading(true)\n    toggleError(null)\n    setSearchArea(rect)\n    setData(null)\n    getData(rect[0], rect[1])\n  }\n\n\n  const handleReset = () => {\n    toggleError(null)\n  }\n\n  return (\n    <div className=\"App\">\n        <Map \n          handleReset={handleReset}\n          handleNewRectangle={updateRectangle}\n          cameras={data}\n          searchArea={searchArea}\n          loading={loading}\n          error={error}\n          errorMessage={errorMessage}\n          regionData={regionData}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}